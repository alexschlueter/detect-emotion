option(WITH_KEYTEST "Compile KeyTest Program" OFF)
if (${WITH_KEYTEST})
project(keytest)
find_package( OpenCV REQUIRED )
add_executable(keytest keytest.cpp)
target_include_directories(keytest PUBLIC ${OpenCV_INCLUDE_DIRS})
target_link_libraries(keytest ${OpenCV_LIBS})
endif()


project(playone)
find_package( OpenCV REQUIRED )
set(CMAKE_INCLUDE_CURRENT_DIR ON)

option(WITH_PLAYONE "Compile PlayOne Program" OFF)
if (${WITH_PLAYONE})
set(SOURCE_FILES playone.cpp controls.cpp)
include_directories ("${CMAKE_SOURCE_DIR}/header")
add_executable(playone ${SOURCE_FILES})
target_include_directories(playone PUBLIC ${OpenCV_INCLUDE_DIRS})
target_link_libraries(playone ${OpenCV_LIBS})
endif()


option(WITH_PLAYALL "Compile PlayALL Program" OFF)
if (${WITH_PLAYALL})
project(playall)
find_package( OpenCV REQUIRED )
set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(SOURCE_FILES playall.cpp controls.cpp)
include_directories ("${CMAKE_SOURCE_DIR}/header")
add_executable(playall ${SOURCE_FILES})
target_include_directories(playall PUBLIC ${OpenCV_INCLUDE_DIRS})
target_link_libraries(playall ${OpenCV_LIBS})
endif()

option(WITH_QVIEWER "Compile QViewer Program" ON)
if (${WITH_QVIEWER})
add_subdirectory(qviewer)
endif()

option(WITH_TRAINER "Compile Trainer Program" OFF)
if (${WITH_TRAINER})
 project(trainer)
 find_package( OpenCV REQUIRED )
 set(CMAKE_INCLUDE_CURRENT_DIR ON)

 set(SOURCE_FILES trainer.cpp)
 include_directories ("${CMAKE_SOURCE_DIR}/header")
 add_executable(trainer ${SOURCE_FILES})
 target_include_directories(trainer PUBLIC ${OpenCV_INCLUDE_DIRS})
 target_link_libraries(trainer EmoLib ${OpenCV_LIBS})
endif()


option(WITH_AUTO_TRAINER "Compile Auto-Trainer Program" OFF)
if (${WITH_AUTO_TRAINER})
        project(auto_trainer)
        find_package( OpenCV REQUIRED )
        set(CMAKE_INCLUDE_CURRENT_DIR ON)

        set(SOURCE_FILES automatic_training.cpp)
        include_directories ("${CMAKE_SOURCE_DIR}/header")
        add_executable(automatic_training ${SOURCE_FILES})
        target_include_directories(automatic_training PUBLIC ${OpenCV_INCLUDE_DIRS})
        target_link_libraries(automatic_training EmoLib ${OpenCV_LIBS})
endif()

option(WITH_AUTO_TRAINER2 "Compile Auto-Trainer2 Program" ON)
if (${WITH_AUTO_TRAINER2})
add_subdirectory(auto_trainer)
endif()
